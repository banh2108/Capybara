local function StartKillAura()
    task.spawn(function()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local Workspace = game:GetService("Workspace")
        local LocalPlayer = Players.LocalPlayer

        repeat task.wait() until LocalPlayer.Character  
        local Character = LocalPlayer.Character  
        local RootPart = Character:FindFirstChild("HumanoidRootPart")  

        LocalPlayer.CharacterAdded:Connect(function(newCharacter)  
            Character = newCharacter  
            repeat task.wait() until newCharacter:FindFirstChild("HumanoidRootPart")  
            RootPart = newCharacter:FindFirstChild("HumanoidRootPart")  
        end)  

        if not RootPart then return end  

        local function GetMonsterService()  
            local success, service = pcall(function()  
                return ReplicatedStorage:WaitForChild("Packages", 3)  
                    :WaitForChild("Knit", 3)  
                    :WaitForChild("Services", 3)  
                    :WaitForChild("MonsterService", 3)  
                    :WaitForChild("RF", 3)  
            end)  
            return success and service or nil  
        end  

        local MonsterService = GetMonsterService()  
        if not MonsterService then  
            warn("⚠️ Không tìm thấy MonsterService, dừng script.")  
            return  
        end  

        local RequestAttack = MonsterService:FindFirstChild("RequestAttack")  
        if not RequestAttack then  
            warn("⚠️ Không tìm thấy RequestAttack, dừng script.")  
            return  
        end  

        local ValidTargets = {  
            ["Ironbaba"] = true, ["Acorn"] = true, ["Apple"] = true, ["Aquarion"] = true, ["Axolotibara"] = true,  
            ["BOSSBOT"] = true, ["Birdibara"] = true, ["Bullibara"] = true, ["Cap-bara"] = true, ["Capysaurus"] = true,  
            ["Cog"] = true, ["Cowzilla"] = true, ["Dinovine"] = true, ["Dog"] = true, ["Dragon Nest"] = true,  
            ["Giant Mushroom"] = true, ["Golden Apple"] = true, ["Pignite"] = true, ["Peepkin"] = true, ["Orange"] = true,  
            ["Oyster"] = true, ["Pear"] = true, ["Pinkaroo"] = true, ["Pinkpurr"] = true, ["Raptor"] = true,  
            ["Rocky"] = true, ["Screw"] = true, ["Sea Urchin"] = true, ["Turbobara"] = true, ["Vault"] = true,  
            ["Tall Capy"] = true, ["Treasure"] = true, ["Wonkybara"] = true  
        }  

        local KillRadius = 50  
        local AttackCooldown = 0.01 -- **Tốc độ tấn công nhanh hơn**  

        local function GetEnemiesInRange()  
            local enemies = {}
            for _, obj in ipairs(Workspace:GetChildren()) do  
                if obj:IsA("Model") and ValidTargets[obj.Name] then  
                    local humanoid = obj:FindFirstChildWhichIsA("Humanoid")  
                    local hrp = obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChild("Head")  

                    if humanoid and humanoid.Health > 0 and hrp then  
                        local distance = (hrp.Position - RootPart.Position).Magnitude  
                        if distance <= KillRadius then  
                            table.insert(enemies, hrp)
                        end  
                    end  
                end  
            end  
            return enemies  
        end  

        while true do  
            if not RootPart or not RootPart.Parent then  
                RootPart = Character and Character:FindFirstChild("HumanoidRootPart")  
                if not RootPart then return end  
            end  

            local enemies = GetEnemiesInRange()  

            for _, targetHRP in ipairs(enemies) do  
                if RootPart then  
                    local direction = (targetHRP.Position - RootPart.Position)  
                    if direction.Magnitude > 0 then  
                        direction = direction.unit  
                        RootPart.CFrame = CFrame.lookAt(RootPart.Position, RootPart.Position + Vector3.new(direction.X, 0, direction.Z))  
                    end  

                    pcall(function()  
                        RequestAttack:InvokeServer(targetHRP.CFrame)  
                    end)  
                end  
            end  
            task.wait(AttackCooldown) -- **Giữ tốc độ tấn công cao**  
        end  
    end)
end

while true do  
    local success, err = pcall(StartKillAura)  
    if not success then  
        warn("⚠️ Script gặp lỗi: ", err)  
    end  
    task.wait(0.5) -- **Giảm delay restart**  
end
